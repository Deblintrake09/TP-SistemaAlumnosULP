package Vista;

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import Entidades.*;
import Modelo.*;


public class JIFAlumnos extends javax.swing.JInternalFrame {
    private Conexion con;
    private AlumnoData alumnoData;
    private Alumno alumno;
    
    public JIFAlumnos() {
        initComponents();
        con = new Conexion();
        alumnoData = new AlumnoData(con);
        
       
        jDFecha.getDateEditor().setEnabled(false);
        jBBorrar.setEnabled(false);
        jBActualizar.setEnabled(false);
        jBBuscar.setEnabled(false);
        jBGuardar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLLegajo = new javax.swing.JLabel();
        jTLegajo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTNomAp = new javax.swing.JTextField();
        jLFecha = new javax.swing.JLabel();
        jDFecha = new com.toedter.calendar.JDateChooser();
        jLActivo = new javax.swing.JLabel();
        jChActivo = new javax.swing.JCheckBox();
        jBGuardar = new javax.swing.JButton();
        jLId = new javax.swing.JLabel();
        jBBuscar = new javax.swing.JButton();
        jBBorrar = new javax.swing.JButton();
        jBActualizar = new javax.swing.JButton();
        jBLimpiar = new javax.swing.JButton();
        jTId = new javax.swing.JTextField();
        jBSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Alumnos");

        jLLegajo.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLLegajo.setText("Legajo");

        jTLegajo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTLegajoKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel2.setText("Nombre y Apellido");

        jLFecha.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLFecha.setText("Fecha de Nacimiento");

        jDFecha.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N

        jLActivo.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLActivo.setText("Activo");

        jChActivo.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jChActivo.setText("Si");

        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jLId.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLId.setText("ID.");

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jBBorrar.setText("Borrar");
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });

        jBActualizar.setText("Actualizar");
        jBActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarActionPerformed(evt);
            }
        });

        jBLimpiar.setText("Limpiar");
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });

        jTId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTIdKeyReleased(evt);
            }
        });

        jBSalir.setBackground(new java.awt.Color(204, 0, 0));
        jBSalir.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jBSalir.setForeground(new java.awt.Color(255, 255, 255));
        jBSalir.setText("X");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLFecha)
                        .addComponent(jLabel2)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLId, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTId, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLLegajo, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jChActivo)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jBBuscar)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jDFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                    .addComponent(jTNomAp)
                                    .addComponent(jTLegajo))
                                .addComponent(jBSalir))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jBActualizar)
                        .addGap(18, 18, 18)
                        .addComponent(jBLimpiar)))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSalir))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTId, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTLegajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLLegajo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTNomAp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLFecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDFecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jChActivo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBGuardar)
                            .addComponent(jBBorrar)
                            .addComponent(jBActualizar)
                            .addComponent(jBLimpiar)))
                    .addComponent(jBBuscar))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        // TODO add your handling code here:
        if(jTNomAp!=null){
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            int dni=Integer.parseInt(jTLegajo.getText());  
            String nom = jTNomAp.getText();
            String fecha = formato.format(jDFecha.getDate());
            LocalDate fechaN = LocalDate.parse(fecha, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            boolean ac = jChActivo.isSelected();
            alumno = new Alumno(dni, nom, fechaN,ac);
            alumnoData.guardarAlumno(alumno);
        }
        limpiar();
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        // TODO add your handling code here:
        int opcion = JOptionPane.showConfirmDialog(null, "Realmente desea salir?", "Confirmar salida", JOptionPane.CLOSED_OPTION, JOptionPane.CANCEL_OPTION);
        if(opcion==0){
            dispose();
        }
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jTIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTIdKeyReleased
        // TODO add your handling code here:
        if(jTId.getText()!=null){
            jBBuscar.setEnabled(true);
        }
        else{
            jBBuscar.setEnabled(false);
        }
    }//GEN-LAST:event_jTIdKeyReleased

    private void jTLegajoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTLegajoKeyReleased
        // TODO add your handling code here:
        if(jTLegajo.getText()!=null){
            jBGuardar.setEnabled(true);
        }
        else{
            jBGuardar.setEnabled(false);
        }
    }//GEN-LAST:event_jTLegajoKeyReleased

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        // TODO add your handling code here:
        if(jTId.getText()!=null){
            int id = Integer.parseInt(jTId.getText());
            alumno= alumnoData.buscarAlumno(id);
            try{
            if(alumno!=null){
                jTLegajo.setText(String.valueOf(alumno.getLegajo()));
                jTNomAp.setText(alumno.getNombreAlumno());
                jDFecha.setDate(Date.valueOf(alumno.getFechaNac()));
                jChActivo.setSelected(alumno.isActivo());
                jBBorrar.setEnabled(true);
                jBActualizar.setEnabled(true);
            }
            }
            catch(NullPointerException e){
                JOptionPane.showMessageDialog(this, "Alumno no encontrado");
                limpiar();
            }
        }
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed
        // TODO add your handling code here:
        if(jTId.getText()!=null){
            int id = Integer.parseInt(jTId.getText());
            alumno= alumnoData.buscarAlumno(id);
            if(alumno!=null){
                if(JOptionPane.showConfirmDialog(this, "Realmente desea borrar?", "Confirmar salida", JOptionPane.CLOSED_OPTION, JOptionPane.CANCEL_OPTION)==0){
                    alumnoData.borrarAlumno(id);
                    JOptionPane.showMessageDialog(this, "Alumno borrado");
                    limpiar();
                }
            }
        }
    }//GEN-LAST:event_jBBorrarActionPerformed

    private void jBActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(jTId.getText());
        alumno = alumnoData.buscarAlumno(id);
        if(alumno!=null){
            alumno.setLegajo(Integer.parseInt(jTLegajo.getText()));
            alumno.setNombreAlumno(jTNomAp.getText());
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String fecha = formato.format(jDFecha.getDate());
            LocalDate fechaN = LocalDate.parse(fecha, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            alumno.setFechaNac(fechaN);
            alumno.setActivo(jChActivo.isSelected());
            alumnoData.actualizarAlumno(alumno);
            JOptionPane.showMessageDialog(this, "Alumno Actualizado");
        
        }
    }//GEN-LAST:event_jBActualizarActionPerformed
    private void limpiar(){
        jTId.setText("");
        jTLegajo.setText("");
        jTNomAp.setText("");
        jDFecha.setDateFormatString(null);
        jChActivo.setSelected(false);
        jBBorrar.setEnabled(false);
        jBActualizar.setEnabled(false);
        jBBuscar.setEnabled(false);
        jBGuardar.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActualizar;
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBLimpiar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JCheckBox jChActivo;
    private com.toedter.calendar.JDateChooser jDFecha;
    private javax.swing.JLabel jLActivo;
    private javax.swing.JLabel jLFecha;
    private javax.swing.JLabel jLId;
    private javax.swing.JLabel jLLegajo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTId;
    private javax.swing.JTextField jTLegajo;
    private javax.swing.JTextField jTNomAp;
    // End of variables declaration//GEN-END:variables
}
