package Vista;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Entidades.*;
import Modelo.*;

public class JIFInscripcion extends javax.swing.JInternalFrame {
    private Conexion con;
    private AlumnoData aldta;
    private DefaultTableModel modelo;
    private InscripcionData incdta;
    private Materia mta;
    private Alumno alumno;
    private Inscripcion ins;
    private List<Materia> listaMaterias;
    
    public JIFInscripcion() {
        initComponents();
        con = new Conexion();
        aldta = new AlumnoData(con);
        incdta = new InscripcionData(con);
        jBEliminar.setEnabled(false);
        jBInscribir.setEnabled(false);
        jRBinscriptas.setSelected(true);
        modelo = new DefaultTableModel(){
        @Override
          public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        armarCabecera();
        cargarAlumnos();
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jCBAlumnos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jRBinscriptas = new javax.swing.JRadioButton();
        jRBnoinscriptas = new javax.swing.JRadioButton();
        jBInscribir = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTInscripcion = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Inscripciones");

        jCBAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBAlumnosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel2.setText("Alumno:");

        buttonGroup1.add(jRBinscriptas);
        jRBinscriptas.setText("Inscriptas");
        jRBinscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBinscriptasActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRBnoinscriptas);
        jRBnoinscriptas.setText("No inscriptas");
        jRBnoinscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBnoinscriptasActionPerformed(evt);
            }
        });

        jBInscribir.setText("Inscribir");
        jBInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInscribirActionPerformed(evt);
            }
        });

        jBEliminar.setText("Anular");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBSalir.setBackground(new java.awt.Color(204, 0, 0));
        jBSalir.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jBSalir.setForeground(new java.awt.Color(255, 255, 255));
        jBSalir.setText("X");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jTInscripcion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTInscripcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTInscripcion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jBInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRBinscriptas)
                                .addGap(35, 35, 35)
                                .addComponent(jRBnoinscriptas)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jCBAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCBAlumnos))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBnoinscriptas)
                    .addComponent(jRBinscriptas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBInscribir)
                    .addComponent(jBEliminar))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        // TODO add your handling code here:
        int opcion = JOptionPane.showConfirmDialog(null, "Realmente desea salir?", "Confirmar salida", JOptionPane.CLOSED_OPTION, JOptionPane.CANCEL_OPTION);
        if(opcion==0){
            dispose();
        }
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jRBinscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBinscriptasActionPerformed
        // TODO add your handling code here:
        jRBnoinscriptas.setSelected(false);
        jBInscribir.setEnabled(false);
        jBEliminar.setEnabled(true);
        if(jCBAlumnos.getSelectedItem()!=null){
            borrarFilas();
            cargarDatosInscriptas();
        }
    }//GEN-LAST:event_jRBinscriptasActionPerformed

    private void jCBAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBAlumnosActionPerformed
        // TODO add your handling code here:
        borrarFilas();
        if(jRBinscriptas.isSelected()){
            cargarDatosInscriptas();
        }
        else{
            cargarDatosNoInscriptas();
        }
    }//GEN-LAST:event_jCBAlumnosActionPerformed

    private void jRBnoinscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBnoinscriptasActionPerformed
        // TODO add your handling code here:
        jRBinscriptas.setSelected(false);
        jBEliminar.setEnabled(false);
        jBInscribir.setEnabled(true);
        if(jCBAlumnos.getSelectedItem()!=null){
            borrarFilas();
            cargarDatosNoInscriptas();
        }
    }//GEN-LAST:event_jRBnoinscriptasActionPerformed

    private void jBInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInscribirActionPerformed
        // TODO add your handling code here:
        int fila = jTInscripcion.getSelectedRow();
        if(fila!=-1){
            alumno = (Alumno)jCBAlumnos.getSelectedItem();
            if(alumno!=null ){
                mta= new Materia();
                mta.setIdMateria((Integer)modelo.getValueAt(fila, 0));
                mta.setNombre((String)modelo.getValueAt(fila, 1));
                ins = new Inscripcion(alumno, mta, 0);
                incdta.guardarInscripcion(ins);
                borrarFilas();
                cargarDatosNoInscriptas();
            }
        }
    }//GEN-LAST:event_jBInscribirActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        // TODO add your handling code here:
        int filaselect= jTInscripcion.getSelectedRow();
        alumno = (Alumno)jCBAlumnos.getSelectedItem();
        if(filaselect!=-1&& alumno !=null)
        {
            int idmat=(Integer)modelo.getValueAt(filaselect, 0);
           
                incdta.borrarCursadaDeUnaMateriaDeunAlumno(alumno.getIdAlumno(), idmat);
                borrarFilas();
                cargarDatosInscriptas();    
            
        }
    }//GEN-LAST:event_jBEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBInscribir;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<Alumno> jCBAlumnos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRBinscriptas;
    private javax.swing.JRadioButton jRBnoinscriptas;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTInscripcion;
    // End of variables declaration//GEN-END:variables
    private void cargarAlumnos(){
       ArrayList<Alumno> lista = aldta.obtenerAlumnos();
       for(Alumno item: lista){
           jCBAlumnos.addItem(item);
       }
    }
    private void armarCabecera(){
        ArrayList<Object> columnas = new ArrayList<>();
        
        columnas.add("ID");
        columnas.add("Nombre");
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        jTInscripcion.setModel(modelo);
        
    }
    private void borrarFilas(){
        int a = modelo.getRowCount()-1;
        for (int i =a; i>=0; i--){
            modelo.removeRow(i);
        }
    
    }
    private void cargarDatosInscriptas(){
        borrarFilas();
        Alumno alumno = (Alumno)jCBAlumnos.getSelectedItem();
        listaMaterias = (List)incdta.obtenerMateriasCursadas(alumno.getIdAlumno());
        for(Materia m: listaMaterias){
            modelo.addRow(new Object[]{m.getIdMateria(), m.getNombre()});
        }
    }
    private void cargarDatosNoInscriptas(){
        borrarFilas();
        Alumno alumno =(Alumno)jCBAlumnos.getSelectedItem();
        List <Materia> listaNo = incdta.obtenerMateriasNOCursadas(alumno.getIdAlumno());
        for(Materia m : listaNo){
            modelo.addRow(new Object[]{m.getIdMateria(), m.getNombre()});
        }
    }
}
