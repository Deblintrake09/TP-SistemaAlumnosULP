/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Entidades.*;
import Modelo.*;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author jackd
 */
public class InscripcionVista extends javax.swing.JInternalFrame {
    
    private Conexion con;
    private InscripcionData iData;
    private AlumnoData aData;
    private MateriaData mData;
    private Alumno alumno;
    private Materia mat;
    private Inscripcion insc;
    private ArrayList<Alumno> listAlums;
    private ArrayList<Materia> listMaterias;
    private ArrayList<Inscripcion> listInscripciones;
    private DefaultTableModel modelo;
            
    /**
     * Creates new form InscripcionVista
     */
    public InscripcionVista() {
        initComponents();
        
        con = new Conexion();
        iData = new InscripcionData(con);
        aData = new AlumnoData(con);
        mData = new MateriaData(con);
        alumno = new Alumno();
        mat = new Materia();
        insc = new Inscripcion();
        btInscribir.setEnabled(false);
        btAnularInscr.setEnabled(false);
        listAlums=aData.obtenerAlumnos();
        rbInscriptas.setSelected(true);
        modelo = new DefaultTableModel();        
        ArmarCabecera();
        for(int i =0;i<listAlums.size();i++)
        {
            jcbAlumnos.addItem(listAlums.get(i));
        }

        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        btSalir = new javax.swing.JButton();
        btAnularInscr = new javax.swing.JButton();
        btInscribir = new javax.swing.JButton();
        rbInscriptas = new javax.swing.JRadioButton();
        rbNoInscripto = new javax.swing.JRadioButton();
        jcbAlumnos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMaterias = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("INSCRIPCIONES");

        btSalir.setText("Salir");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });

        btAnularInscr.setText("Anular Inscripcion");
        btAnularInscr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnularInscrActionPerformed(evt);
            }
        });

        btInscribir.setText("Inscribir");
        btInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInscribirActionPerformed(evt);
            }
        });

        rbInscriptas.setText("Inscripto");
        rbInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbInscriptasActionPerformed(evt);
            }
        });

        rbNoInscripto.setText("No Inscripto");
        rbNoInscripto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNoInscriptoActionPerformed(evt);
            }
        });

        jcbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnosActionPerformed(evt);
            }
        });

        jtMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtMaterias);

        jLabel2.setText("ALUMNO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(btAnularInscr)
                        .addGap(55, 55, 55)
                        .addComponent(btSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(rbInscriptas)
                        .addGap(27, 27, 27)
                        .addComponent(rbNoInscripto))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btInscribir)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(117, 117, 117))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbNoInscripto)
                    .addComponent(rbInscriptas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btInscribir)
                    .addComponent(btAnularInscr)
                    .addComponent(btSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbInscriptasActionPerformed
        rbNoInscripto.setSelected(false);
        btAnularInscr.setEnabled(true);
        btInscribir.setEnabled(false);
        if(jcbAlumnos.getSelectedItem()!=null)
        {
            borrarFilas();
            cargarMateriasInscriptas();
        }
    }//GEN-LAST:event_rbInscriptasActionPerformed

    private void jcbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnosActionPerformed
        borrarFilas();
        if(rbInscriptas.isSelected())
        {
            cargarMateriasInscriptas();
        }
        else{
                cargarMateriasNoInscriptas();
        }
    }//GEN-LAST:event_jcbAlumnosActionPerformed

    private void rbNoInscriptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNoInscriptoActionPerformed
        rbInscriptas.setSelected(false);
        btAnularInscr.setEnabled(false);
        btInscribir.setEnabled(true);
        if(jcbAlumnos.getSelectedItem()!=null)
        {
            borrarFilas();
            cargarMateriasNoInscriptas();
        }
    }//GEN-LAST:event_rbNoInscriptoActionPerformed

    private void btInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInscribirActionPerformed
        int filaselect= jtMaterias.getSelectedRow();
        if(filaselect!=-1)
        {
            alumno = (Alumno)jcbAlumnos.getSelectedItem();
            if(alumno !=null)
            {
                mat = new Materia();
                mat.setIdMateria((Integer)modelo.getValueAt(filaselect, 0));
                mat.setNombre((String)modelo.getValueAt(filaselect, 1));
                insc = new Inscripcion(alumno,mat,0);
                iData.guardarInscripcion(insc);
                borrarFilas();
                cargarMateriasNoInscriptas();
                
                
            }
        }
        
        
    }//GEN-LAST:event_btInscribirActionPerformed

    private void btAnularInscrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnularInscrActionPerformed
        int filaselect= jtMaterias.getSelectedRow();
        alumno = (Alumno)jcbAlumnos.getSelectedItem();
        if(filaselect!=-1&& alumno !=null)
        {
            int idmat=(Integer)modelo.getValueAt(filaselect, 0);
           
                iData.borrarCursadaDeUnaMateriaDeunAlumno(alumno.getIdAlumno(), idmat);
                borrarFilas();
                cargarMateriasInscriptas();    
            
        }
        
    }//GEN-LAST:event_btAnularInscrActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
        
        dispose();
    }//GEN-LAST:event_btSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnularInscr;
    private javax.swing.JButton btInscribir;
    private javax.swing.JButton btSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Alumno> jcbAlumnos;
    private javax.swing.JTable jtMaterias;
    private javax.swing.JRadioButton rbInscriptas;
    private javax.swing.JRadioButton rbNoInscripto;
    // End of variables declaration//GEN-END:variables

    private void ArmarCabecera()
    {
        ArrayList<Object> titulos = new ArrayList();
        titulos.add("ID");
        titulos.add("Nombre");
        for( Object it: titulos)
        {
            modelo.addColumn(it);
        }
        jtMaterias.setModel(modelo);
    }
    
    private void borrarFilas()
    {
        int a=  modelo.getRowCount()-1;
        for (int i=a;i>=0;i--)
        {
            modelo.removeRow(i);
        }
    }
    
    private void cargarMateriasInscriptas()
    {
         Alumno select=(Alumno)jcbAlumnos.getSelectedItem();
            listMaterias = (ArrayList)iData.obtenerMateriasCursadas(select.getIdAlumno());
                for (Materia m: listMaterias)
                {
                    modelo.addRow(new Object[]{m.getIdMateria(),m.getNombre()});
                }
    }
    
    private void cargarMateriasNoInscriptas()
    {
        Alumno select=(Alumno)jcbAlumnos.getSelectedItem();
            listMaterias = (ArrayList)iData.obtenerMateriasNOCursadas(select.getIdAlumno());
                for (Materia m: listMaterias)
                {
                    modelo.addRow(new Object[]{m.getIdMateria(),m.getNombre()});
                }
    }

}
